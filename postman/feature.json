{
  "info": {
    "_postman_id": "4124a62f-68b2-4f1d-af88-7685914391fd",
    "name": "Feature Comments (EWM)",
    "description": "Базовые тесты для функциональности комментариев + bootstrap (user/category/event/publish)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "43536437"
  },
  "item": [
    {
      "name": "0) Create",
      "item": [
        {
          "name": "0.1 Create User (201)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"201 Created\", function(){ pm.response.to.have.status(201); });",
                  "pm.test(\"JSON\", function(){ pm.response.to.be.json; });",
                  "try { const b = pm.response.json(); if (b && b.id) pm.collectionVariables.set('userId', String(b.id)); } catch(e) {}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test User {{$randomInt}}\",\n  \"email\": \"testuser{{$randomInt}}@mail.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/admin/users",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "users"
              ]
            }
          },
          "response": []
        },
        {
          "name": "0.2 Create Category (201)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"201 Created\", function(){ pm.response.to.have.status(201); });",
                  "pm.test(\"JSON\", function(){ pm.response.to.be.json; });",
                  "try { const b = pm.response.json(); if (b && b.id) pm.collectionVariables.set('categoryId', String(b.id)); } catch(e) {}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Category {{$randomInt}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/admin/categories",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "categories"
              ]
            }
          },
          "response": []
        },
        {
          "name": "0.3 Create Event (201)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"201 Created\", function(){ pm.response.to.have.status(201); });",
                  "pm.test(\"JSON\", function(){ pm.response.to.be.json; });",
                  "try { const b = pm.response.json(); if (b && b.id) pm.collectionVariables.set('eventId', String(b.id)); } catch(e) {}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"category\": {{categoryId}},\n  \"annotation\": \"Очень интересное событие для всех участников!\",\n  \"description\": \"Полное описание события, которое точно длиннее двадцати символов и удовлетворяет валидации.\",\n  \"title\": \"Test Event {{$randomInt}}\",\n  \"eventDate\": \"2035-05-05 12:00:00\",\n  \"location\": {\"lat\": 43.242, \"lon\": 76.903},\n  \"paid\": false,\n  \"participantLimit\": 0,\n  \"requestModeration\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}/events",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                "{{userId}}",
                "events"
              ]
            }
          },
          "response": []
        },
        {
          "name": "0.4 Publish Event (200)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"200 OK\", function(){ pm.response.to.be.ok; });",
                  "pm.test(\"JSON\", function(){ pm.response.to.be.json; });"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"stateAction\": \"PUBLISH_EVENT\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/admin/events/{{eventId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "events",
                "{{eventId}}"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "1) Comments",
      "item": [
        {
          "name": "1) Create Comment (201)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"201 Created\", function(){ pm.response.to.have.status(201); });",
                  "pm.test(\"JSON\", function(){ pm.response.to.be.json; });",
                  "try { const b = pm.response.json(); if (b && b.id) pm.collectionVariables.set('commentId', String(b.id)); } catch(e) {}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"text\": \"Добавление нового комментария\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}/events/{{eventId}}/comments",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                "{{userId}}",
                "events",
                "{{eventId}}",
                "comments"
              ]
            }
          },
          "response": []
        },
        {
          "name": "2) Update Own Comment (200)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"200 OK\", function(){ pm.response.to.be.ok; });",
                  "pm.test(\"JSON\", function(){ pm.response.to.be.json; });"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"text\": \"Обновление комментария\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}/comments/{{commentId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                "{{userId}}",
                "comments",
                "{{commentId}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "3) Admin: Reject (200 → REJECTED)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"200 OK\", function(){ pm.response.to.be.ok; });",
                  "pm.test(\"JSON\", function(){ pm.response.to.be.json; });",
                  "pm.test(\"status=REJECTED\", function(){ pm.expect(pm.response.json().status).to.eql('REJECTED'); });"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/comments/{{commentId}}/reject",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "comments",
                "{{commentId}}",
                "reject"
              ]
            }
          },
          "response": []
        },
        {
          "name": "4) Admin: Publish (200 → PUBLISHED)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"200 OK\", function(){ pm.response.to.be.ok; });",
                  "pm.test(\"JSON\", function(){ pm.response.to.be.json; });",
                  "pm.test(\"status=PUBLISHED\", function(){ pm.expect(pm.response.json().status).to.eql('PUBLISHED'); });"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/comments/{{commentId}}/publish",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "comments",
                "{{commentId}}",
                "publish"
              ]
            }
          },
          "response": []
        },
        {
          "name": "5) Public List (200)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"200 OK\", function(){ pm.response.to.be.ok; });",
                  "pm.test(\"JSON\", function(){ pm.response.to.be.json; });",
                  "try { const arr = pm.response.json(); pm.test(\"Ответ — массив\", function(){ pm.expect(Array.isArray(arr)).to.be.true; }); } catch(e) {}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/events/{{eventId}}/comments?from={{from}}&size={{size}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "events",
                "{{eventId}}",
                "comments"
              ],
              "query": [
                {
                  "key": "from",
                  "value": "{{from}}"
                },
                {
                  "key": "size",
                  "value": "{{size}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "6) Delete Own Comment (204)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"204 No Content\", function(){ pm.response.to.have.status(204); });"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}/comments/{{commentId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                "{{userId}}",
                "comments",
                "{{commentId}}"
              ]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080"
    },
    {
      "key": "userId",
      "value": ""
    },
    {
      "key": "categoryId",
      "value": ""
    },
    {
      "key": "eventId",
      "value": ""
    },
    {
      "key": "commentId",
      "value": ""
    },
    {
      "key": "from",
      "value": "0"
    },
    {
      "key": "size",
      "value": "10"
    }
  ]
}